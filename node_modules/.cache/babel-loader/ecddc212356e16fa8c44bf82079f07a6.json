{"ast":null,"code":"var _jsxFileName = \"/Users/eduardourbaez/Documents/UCLA_Extension/react-employee-directory/src/components/EmployeesResultContainer/index.js\";\nimport React, { Component } from 'react';\nimport employees from \"./employees.json\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\"; // import EmployeeCard from '../EmployeeCard'\n\nclass EmployeesResultContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      results: [],\n      employees: employees\n    };\n\n    this.searchEmployees = name => {\n      // Filter this.state.employees for employees with a name that is approximate to the search made by user\n      const results = this.state.employees.filter(result => result.name.indexOf(name) !== -1);\n      console.log(this.state.employees);\n      console.log(name);\n      this.setState({\n        results\n      });\n    };\n\n    this.removeEmployee = id => {\n      // Filter this.state.employees for employees with an id not equal to the id being removed\n      const results = this.state.results.filter(employee => employee.id !== id); // Set this.state.employees equal to the new employees array\n\n      this.setState({\n        results\n      });\n    };\n\n    this.handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchEmployees(this.state.search);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      search: \"\",\n      results: employees\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      search: this.state.search,\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ResultList, {\n      results: this.state.results,\n      removeEmployee: this.removeEmployee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EmployeesResultContainer; // {/* <Wrapper>\n//         <Title>Friends List</Title>\n//         {this.state.friends.map(friend => (\n//           <FriendCard\n//             removeFriend={this.removeFriend}\n//             id={friend.id}\n//             key={friend.id}\n//             name={friend.name}\n//             image={friend.image}\n//             occupation={friend.occupation}\n//             location={friend.location}\n//           />\n//         ))}\n//       </Wrapper> */}\n// // this.state.employees.map(employee => (\n// //   <EmployeeCard\n// //   removeEmployee={this.removeEmployee}\n// //   id={employee.id}\n// //   key={employee.id}\n// //   name={employee.name}\n// //   image={employee.image}\n// //   occupation={employee.occupation}\n// //   location={employee.location}>\n// //   </EmployeeCard> \n// // ))\n//   // componentWillMount() {\n//   //   this.setState({\n//   //     employees,\n//   //     results: employees\n//   //   })\n//   // }\n//   // filterEmployees = (employeeFilter) => {\n//   //   let results = this.state.employees\n//   //   results = results.filter((employee) => {\n//   //     let employeeName = employee.name.toLowerCase()\n//   //     return employeeName.indexOf(\n//   //       employeeFilter.toLowerCase()) !== -1\n//   //   })\n//   //   this.setState({\n//   //     results\n//   //   })\n//   // }","map":{"version":3,"sources":["/Users/eduardourbaez/Documents/UCLA_Extension/react-employee-directory/src/components/EmployeesResultContainer/index.js"],"names":["React","Component","employees","SearchForm","ResultList","EmployeesResultContainer","state","search","results","searchEmployees","name","filter","result","indexOf","console","log","setState","removeEmployee","id","employee","handleInputChange","event","target","value","handleFormSubmit","preventDefault","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AAEA,MAAMC,wBAAN,SAAuCJ,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAC7CK,KAD6C,GACrC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNN,MAAAA,SAAS,EAAEA;AAHL,KADqC;;AAAA,SAe7CO,eAf6C,GAe3BC,IAAI,IAAI;AACxB;AACA,YAAMF,OAAO,GAAG,KAAKF,KAAL,CAAWJ,SAAX,CAAqBS,MAArB,CAA4BC,MAAM,IAAIA,MAAM,CAACF,IAAP,CAAYG,OAAZ,CAAoBH,IAApB,MAA8B,CAAC,CAArE,CAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWJ,SAAvB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,WAAKM,QAAL,CAAc;AAACR,QAAAA;AAAD,OAAd;AAED,KAtB4C;;AAAA,SAwB7CS,cAxB6C,GAwB5BC,EAAE,IAAI;AACrB;AACA,YAAMV,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,CAAmBG,MAAnB,CAA2BQ,QAAQ,IAAIA,QAAQ,CAACD,EAAT,KAAgBA,EAAvD,CAAhB,CAFqB,CAGrB;;AACA,WAAKF,QAAL,CAAc;AAACR,QAAAA;AAAD,OAAd;AACD,KA7B4C;;AAAA,SA+B7CY,iBA/B6C,GA+BzBC,KAAK,IAAI;AAC3B,YAAMX,IAAI,GAAGW,KAAK,CAACC,MAAN,CAAaZ,IAA1B;AACA,YAAMa,KAAK,GAAGF,KAAK,CAACC,MAAN,CAAaC,KAA3B;AACA,WAAKP,QAAL,CAAc;AACZ,SAACN,IAAD,GAAQa;AADI,OAAd;AAGD,KArC4C;;AAAA,SAwC7CC,gBAxC6C,GAwC1BH,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACI,cAAN;AACA,WAAKhB,eAAL,CAAqB,KAAKH,KAAL,CAAWC,MAAhC;AACD,KA3C4C;AAAA;;AAQjDmB,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,QAAL,CAAc;AACdT,MAAAA,MAAM,EAAE,EADM;AAEdC,MAAAA,OAAO,EAAEN;AAFK,KAAd;AAID;;AAiCCyB,EAAAA,MAAM,GAAG;AACP,WAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWC,MADrB;AAEE,MAAA,gBAAgB,EAAE,KAAKiB,gBAFzB;AAGE,MAAA,iBAAiB,EAAE,KAAKJ,iBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWE,OAAhC;AACA,MAAA,cAAc,EAAE,KAAKS,cADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFA;AAYD;;AA3D8C;;AA8DjD,eAAeZ,wBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\n\nimport employees from \"./employees.json\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\n\n// import EmployeeCard from '../EmployeeCard'\n\nclass EmployeesResultContainer extends Component {\n    state = {\n      search: \"\",\n      results: [],\n      employees: employees\n    }\n\n\ncomponentDidMount() {\n  this.setState({\n  search: \"\",  \n  results: employees\n})\n};\n\n    searchEmployees = name => {\n      // Filter this.state.employees for employees with a name that is approximate to the search made by user\n      const results = this.state.employees.filter(result => result.name.indexOf(name) !== -1);\n      console.log(this.state.employees);\n      console.log(name);\n      this.setState({results});\n\n    };\n\n    removeEmployee = id => {\n      // Filter this.state.employees for employees with an id not equal to the id being removed\n      const results = this.state.results.filter( employee => employee.id !== id);\n      // Set this.state.employees equal to the new employees array\n      this.setState({results});\n    };\n  \n    handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  \n    // When the form is submitted, search the Employees JSON for `this.state.search`\n    handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchEmployees(this.state.search);\n    };\n\n\n  render() {\n    return (\n    \n    <div>\n        <SearchForm\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n        <ResultList results={this.state.results}\n        removeEmployee={this.removeEmployee}/>\n    </div>\n    )\n  }\n}\n\nexport default EmployeesResultContainer\n\n// {/* <Wrapper>\n//         <Title>Friends List</Title>\n//         {this.state.friends.map(friend => (\n//           <FriendCard\n//             removeFriend={this.removeFriend}\n//             id={friend.id}\n//             key={friend.id}\n//             name={friend.name}\n//             image={friend.image}\n//             occupation={friend.occupation}\n//             location={friend.location}\n//           />\n//         ))}\n//       </Wrapper> */}\n\n\n// // this.state.employees.map(employee => (\n// //   <EmployeeCard\n// //   removeEmployee={this.removeEmployee}\n// //   id={employee.id}\n// //   key={employee.id}\n// //   name={employee.name}\n// //   image={employee.image}\n// //   occupation={employee.occupation}\n// //   location={employee.location}>\n// //   </EmployeeCard> \n// // ))\n\n\n//   // componentWillMount() {\n//   //   this.setState({\n//   //     employees,\n//   //     results: employees\n//   //   })\n//   // }\n\n//   // filterEmployees = (employeeFilter) => {\n//   //   let results = this.state.employees\n//   //   results = results.filter((employee) => {\n//   //     let employeeName = employee.name.toLowerCase()\n//   //     return employeeName.indexOf(\n//   //       employeeFilter.toLowerCase()) !== -1\n//   //   })\n//   //   this.setState({\n//   //     results\n//   //   })\n//   // }"]},"metadata":{},"sourceType":"module"}