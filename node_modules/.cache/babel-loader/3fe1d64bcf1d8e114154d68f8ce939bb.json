{"ast":null,"code":"var _jsxFileName = \"/Users/eduardourbaez/Documents/UCLA_Extension/react-employee-directory/src/components/EmployeesResultContainer/index.js\";\nimport React, { Component } from 'react';\nimport employees from \"./employees.json\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport EmployeeCard from \"../EmployeeCard\";\n\nclass EmployeesResultContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      results: employees,\n      employees: employees\n    };\n\n    this.searchEmployees = search => {\n      //search.preventDefault();\n      // Filter this.state.employees for employees with a name,location,or occupation that is approximate to the search made by user\n      const results = this.state.employees.filter(result => result.name.toLowerCase().indexOf(search) !== -1 || result.occupation.toLowerCase().indexOf(search) !== -1 || result.location.toLowerCase().indexOf(search) !== -1);\n      this.setState({\n        results\n      });\n    };\n\n    this.removeEmployee = id => {\n      id.preventDefault(); // Filter this.state.employees for employees with an id not equal to the id being removed\n\n      const employees = this.state.employees.filter(employee => employee.id !== id); // Set this.state.employees equal to the new employees array\n\n      this.setState({\n        employees\n      });\n    };\n\n    this.handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchEmployees(this.state.search);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      search: this.state.search,\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(ResultList, {\n      results: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(EmployeeCard, {\n      removeEmployee: this.removeEmployee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EmployeesResultContainer; // {/* <Wrapper>\n//         <Title>Friends List</Title>\n//         {this.state.friends.map(friend => (\n//           <FriendCard\n//             removeFriend={this.removeFriend}\n//             id={friend.id}\n//             key={friend.id}\n//             name={friend.name}\n//             image={friend.image}\n//             occupation={friend.occupation}\n//             location={friend.location}\n//           />\n//         ))}\n//       </Wrapper> */}\n// // this.state.employees.map(employee => (\n// //   <EmployeeCard\n// //   removeEmployee={this.removeEmployee}\n// //   id={employee.id}\n// //   key={employee.id}\n// //   name={employee.name}\n// //   image={employee.image}\n// //   occupation={employee.occupation}\n// //   location={employee.location}>\n// //   </EmployeeCard> \n// // ))\n//   // componentWillMount() {\n//   //   this.setState({\n//   //     employees,\n//   //     results: employees\n//   //   })\n//   // }","map":{"version":3,"sources":["/Users/eduardourbaez/Documents/UCLA_Extension/react-employee-directory/src/components/EmployeesResultContainer/index.js"],"names":["React","Component","employees","SearchForm","ResultList","EmployeeCard","EmployeesResultContainer","state","search","results","searchEmployees","filter","result","name","toLowerCase","indexOf","occupation","location","setState","removeEmployee","id","preventDefault","employee","handleInputChange","event","target","value","handleFormSubmit","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAGA,MAAMC,wBAAN,SAAuCL,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAC7CM,KAD6C,GACrC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAEP,SAFH;AAGNA,MAAAA,SAAS,EAAEA;AAHL,KADqC;;AAAA,SAO7CQ,eAP6C,GAO3BF,MAAM,IAAI;AAC1B;AACA;AACA,YAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWL,SAAX,CAAqBS,MAArB,CAA4BC,MAAM,IAChDA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,OAA1B,CAAkCP,MAAlC,MAA8C,CAAC,CAA/C,IAAoDI,MAAM,CAACI,UAAP,CAAkBF,WAAlB,GAAgCC,OAAhC,CAAwCP,MAAxC,MAAoD,CAAC,CAAzG,IAA8GI,MAAM,CAACK,QAAP,CAAgBH,WAAhB,GAA8BC,OAA9B,CAAsCP,MAAtC,MAAkD,CAAC,CADnJ,CAAhB;AAEA,WAAKU,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AAED,KAd4C;;AAAA,SAgB7CU,cAhB6C,GAgB5BC,EAAE,IAAI;AACrBA,MAAAA,EAAE,CAACC,cAAH,GADqB,CAErB;;AACA,YAAMnB,SAAS,GAAG,KAAKK,KAAL,CAAWL,SAAX,CAAqBS,MAArB,CAA6BW,QAAQ,IAAIA,QAAQ,CAACF,EAAT,KAAgBA,EAAzD,CAAlB,CAHqB,CAIrB;;AACA,WAAKF,QAAL,CAAc;AAAEhB,QAAAA;AAAF,OAAd;AACD,KAtB4C;;AAAA,SAyB7CqB,iBAzB6C,GAyBzBC,KAAK,IAAI;AAC3B,YAAMX,IAAI,GAAGW,KAAK,CAACC,MAAN,CAAaZ,IAA1B;AACA,YAAMa,KAAK,GAAGF,KAAK,CAACC,MAAN,CAAaC,KAA3B;AACA,WAAKR,QAAL,CAAc;AACZ,SAACL,IAAD,GAAQa;AADI,OAAd;AAGD,KA/B4C;;AAAA,SAkC7CC,gBAlC6C,GAkC1BH,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACH,cAAN;AACA,WAAKX,eAAL,CAAqB,KAAKH,KAAL,CAAWC,MAAhC;AACD,KArC4C;AAAA;;AAwC/CoB,EAAAA,MAAM,GAAG;AACP,WAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWC,MADrB;AAEE,MAAA,gBAAgB,EAAE,KAAKmB,gBAFzB;AAGE,MAAA,iBAAiB,EAAE,KAAKJ,iBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAc,MAAA,cAAc,EAAE,KAAKU,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CANJ,CAFA;AAaD;;AAtD8C;;AAyDjD,eAAeb,wBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\n\nimport employees from \"./employees.json\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\nimport EmployeeCard from \"../EmployeeCard\"\n\n\nclass EmployeesResultContainer extends Component {\n    state = {\n      search: \"\",\n      results: employees,\n      employees: employees\n    }\n\n    searchEmployees = search => {\n      //search.preventDefault();\n      // Filter this.state.employees for employees with a name,location,or occupation that is approximate to the search made by user\n      const results = this.state.employees.filter(result => \n        result.name.toLowerCase().indexOf(search) !== -1 || result.occupation.toLowerCase().indexOf(search) !== -1 || result.location.toLowerCase().indexOf(search) !== -1);\n      this.setState({results});\n\n    };\n\n    removeEmployee = id => {\n      id.preventDefault();\n      // Filter this.state.employees for employees with an id not equal to the id being removed\n      const employees = this.state.employees.filter( employee => employee.id !== id);\n      // Set this.state.employees equal to the new employees array\n      this.setState({ employees });\n    };\n\n  \n    handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  \n    // When the form is submitted, search the Employees JSON for `this.state.search`\n    handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchEmployees(this.state.search);\n    };\n\n\n  render() {\n    return (\n    \n    <div>\n        <SearchForm\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n        <ResultList results={this.state.results}>\n        <EmployeeCard removeEmployee={this.removeEmployee}/>\n        </ResultList>\n    </div>\n    )\n  }\n}\n\nexport default EmployeesResultContainer\n\n// {/* <Wrapper>\n//         <Title>Friends List</Title>\n//         {this.state.friends.map(friend => (\n//           <FriendCard\n//             removeFriend={this.removeFriend}\n//             id={friend.id}\n//             key={friend.id}\n//             name={friend.name}\n//             image={friend.image}\n//             occupation={friend.occupation}\n//             location={friend.location}\n//           />\n//         ))}\n//       </Wrapper> */}\n\n\n// // this.state.employees.map(employee => (\n// //   <EmployeeCard\n// //   removeEmployee={this.removeEmployee}\n// //   id={employee.id}\n// //   key={employee.id}\n// //   name={employee.name}\n// //   image={employee.image}\n// //   occupation={employee.occupation}\n// //   location={employee.location}>\n// //   </EmployeeCard> \n// // ))\n\n\n//   // componentWillMount() {\n//   //   this.setState({\n//   //     employees,\n//   //     results: employees\n//   //   })\n//   // }\n\n"]},"metadata":{},"sourceType":"module"}