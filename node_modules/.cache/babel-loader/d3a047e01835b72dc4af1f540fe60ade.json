{"ast":null,"code":"var _jsxFileName = \"/Users/eduardourbaez/Documents/UCLA_Extension/react-employee-directory/src/components/EmployeesResultContainer/index.js\";\nimport React, { Component } from 'react';\nimport employees from \"./employees.json\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\"; // import EmployeeCard from '../EmployeeCard'\n\nclass EmployeesResultContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      results: [],\n      employees: employees\n    };\n\n    this.searchEmployees = query => {\n      this.state.employees.filter(employees => {\n        if (employees.name == query || employees.occupation == query || employees.occupation == query) {\n          return employees;\n        }\n\n        ;\n      }).then(res => this.setState({\n        results: employees\n      })).catch(err => console.log(err));\n    };\n\n    this.removeEmployee = id => {\n      // Filter this.state.employees for employees with an id not equal to the id being removed\n      const employees = this.state.employees.filter(employee => employee.id !== id); // Set this.state.employees equal to the new employees array\n\n      this.setState(this.state.employees);\n    };\n\n    this.handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchEmployees(this.state.search);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      search: this.state.search,\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(ResultList, {\n      results: this.state.results,\n      removeEmployee: this.removeEmployee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EmployeesResultContainer; // {/* <Wrapper>\n//         <Title>Friends List</Title>\n//         {this.state.friends.map(friend => (\n//           <FriendCard\n//             removeFriend={this.removeFriend}\n//             id={friend.id}\n//             key={friend.id}\n//             name={friend.name}\n//             image={friend.image}\n//             occupation={friend.occupation}\n//             location={friend.location}\n//           />\n//         ))}\n//       </Wrapper> */}\n// // this.state.employees.map(employee => (\n// //   <EmployeeCard\n// //   removeEmployee={this.removeEmployee}\n// //   id={employee.id}\n// //   key={employee.id}\n// //   name={employee.name}\n// //   image={employee.image}\n// //   occupation={employee.occupation}\n// //   location={employee.location}>\n// //   </EmployeeCard> \n// // ))\n//   // componentWillMount() {\n//   //   this.setState({\n//   //     employees,\n//   //     results: employees\n//   //   })\n//   // }\n//   // filterEmployees = (employeeFilter) => {\n//   //   let results = this.state.employees\n//   //   results = results.filter((employee) => {\n//   //     let employeeName = employee.name.toLowerCase()\n//   //     return employeeName.indexOf(\n//   //       employeeFilter.toLowerCase()) !== -1\n//   //   })\n//   //   this.setState({\n//   //     results\n//   //   })\n//   // }","map":{"version":3,"sources":["/Users/eduardourbaez/Documents/UCLA_Extension/react-employee-directory/src/components/EmployeesResultContainer/index.js"],"names":["React","Component","employees","SearchForm","ResultList","EmployeesResultContainer","state","search","results","searchEmployees","query","filter","name","occupation","then","res","setState","catch","err","console","log","removeEmployee","id","employee","handleInputChange","event","target","value","handleFormSubmit","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AAEA,MAAMC,wBAAN,SAAuCJ,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAC7CK,KAD6C,GACrC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNN,MAAAA,SAAS,EAAEA;AAHL,KADqC;;AAAA,SAQ7CO,eAR6C,GAQ3BC,KAAK,IAAI;AAEzB,WAAKJ,KAAL,CAAWJ,SAAX,CAAqBS,MAArB,CAA4BT,SAAS,IAAI;AACvC,YAAIA,SAAS,CAACU,IAAV,IAAkBF,KAAlB,IAA2BR,SAAS,CAACW,UAAV,IAAwBH,KAAnD,IAA4DR,SAAS,CAACW,UAAV,IAAwBH,KAAxF,EAA8F;AAC5F,iBAAOR,SAAP;AACD;;AAAC;AACD,OAJH,EAKGY,IALH,CAKQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAEN;AAAV,OAAd,CALf,EAMGe,KANH,CAMSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANhB;AAOD,KAjB4C;;AAAA,SAmB7CG,cAnB6C,GAmB5BC,EAAE,IAAI;AACrB;AACA,YAAMpB,SAAS,GAAG,KAAKI,KAAL,CAAWJ,SAAX,CAAqBS,MAArB,CAA6BY,QAAQ,IAAIA,QAAQ,CAACD,EAAT,KAAgBA,EAAzD,CAAlB,CAFqB,CAGrB;;AACA,WAAKN,QAAL,CAAc,KAAKV,KAAL,CAAWJ,SAAzB;AACD,KAxB4C;;AAAA,SA2B7CsB,iBA3B6C,GA2BzBC,KAAK,IAAI;AAC3B,YAAMb,IAAI,GAAGa,KAAK,CAACC,MAAN,CAAad,IAA1B;AACA,YAAMe,KAAK,GAAGF,KAAK,CAACC,MAAN,CAAaC,KAA3B;AACA,WAAKX,QAAL,CAAc;AACZ,SAACJ,IAAD,GAAQe;AADI,OAAd;AAGD,KAjC4C;;AAAA,SAoC7CC,gBApC6C,GAoC1BH,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACI,cAAN;AACA,WAAKpB,eAAL,CAAqB,KAAKH,KAAL,CAAWC,MAAhC;AACD,KAvC4C;AAAA;;AA0C/CuB,EAAAA,MAAM,GAAG;AACP,WAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWC,MADrB;AAEE,MAAA,gBAAgB,EAAE,KAAKqB,gBAFzB;AAGE,MAAA,iBAAiB,EAAE,KAAKJ,iBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWE,OAAhC;AAAyC,MAAA,cAAc,EAAE,KAAKa,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFA;AAWD;;AAtD8C;;AAyDjD,eAAehB,wBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\n\nimport employees from \"./employees.json\";\nimport SearchForm from \"./SearchForm\";\nimport ResultList from \"./ResultList\";\n\n// import EmployeeCard from '../EmployeeCard'\n\nclass EmployeesResultContainer extends Component {\n    state = {\n      search: \"\",\n      results: [],\n      employees: employees\n    }\n\n\n    searchEmployees = query => {\n\n      this.state.employees.filter(employees => {\n        if (employees.name == query || employees.occupation == query || employees.occupation == query){\n          return employees\n        } ;\n        })\n        .then(res => this.setState({results: employees}))\n        .catch(err => console.log(err));\n    };\n\n    removeEmployee = id => {\n      // Filter this.state.employees for employees with an id not equal to the id being removed\n      const employees = this.state.employees.filter( employee => employee.id !== id);\n      // Set this.state.employees equal to the new employees array\n      this.setState(this.state.employees);\n    };\n\n  \n    handleInputChange = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  \n    // When the form is submitted, search the Employees JSON for `this.state.search`\n    handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchEmployees(this.state.search);\n    };\n\n\n  render() {\n    return (\n    \n    <div>\n        <SearchForm\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n        <ResultList results={this.state.results} removeEmployee={this.removeEmployee}/>\n    </div>\n    )\n  }\n}\n\nexport default EmployeesResultContainer\n\n// {/* <Wrapper>\n//         <Title>Friends List</Title>\n//         {this.state.friends.map(friend => (\n//           <FriendCard\n//             removeFriend={this.removeFriend}\n//             id={friend.id}\n//             key={friend.id}\n//             name={friend.name}\n//             image={friend.image}\n//             occupation={friend.occupation}\n//             location={friend.location}\n//           />\n//         ))}\n//       </Wrapper> */}\n\n\n// // this.state.employees.map(employee => (\n// //   <EmployeeCard\n// //   removeEmployee={this.removeEmployee}\n// //   id={employee.id}\n// //   key={employee.id}\n// //   name={employee.name}\n// //   image={employee.image}\n// //   occupation={employee.occupation}\n// //   location={employee.location}>\n// //   </EmployeeCard> \n// // ))\n\n\n//   // componentWillMount() {\n//   //   this.setState({\n//   //     employees,\n//   //     results: employees\n//   //   })\n//   // }\n\n//   // filterEmployees = (employeeFilter) => {\n//   //   let results = this.state.employees\n//   //   results = results.filter((employee) => {\n//   //     let employeeName = employee.name.toLowerCase()\n//   //     return employeeName.indexOf(\n//   //       employeeFilter.toLowerCase()) !== -1\n//   //   })\n//   //   this.setState({\n//   //     results\n//   //   })\n//   // }"]},"metadata":{},"sourceType":"module"}